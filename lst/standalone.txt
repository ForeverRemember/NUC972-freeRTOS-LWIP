; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\standalone.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\standalone.d --cpu=ARM926EJ-S --apcs=interwork -O0 --diag_suppress=9931,1295,177,550 -I.\Driver\Include -I.\lwip-1.4.1\include -I.\lwip-1.4.1\src\include\ipv4 -I.\lwip-1.4.1\src\include\ -I.\FreeRTOS\Source\include -I.\FreeRTOS\Source\portable\MemMang -I.\FreeRTOS\Source\portable\RVDS\ARM9_NUC970 -I.\lwip-1.4.1 -D__UVISION_VERSION=524 --omf_browse=.\obj\standalone.crf Driver\Source\standalone.c]
                          ARM

                          AREA ||i.__user_setup_stackheap||, CODE, READONLY, ALIGN=2

                  __user_setup_stackheap PROC
;;;36     __value_in_regs struct R0_R3 {unsigned heap_base, stack_base, heap_limit, stack_limit;} 
;;;37         __user_setup_stackheap(unsigned int R0, unsigned int SP, unsigned int R2, unsigned int SL)
000000  e92d407f          PUSH     {r0-r6,lr}
;;;38     
;;;39     {
000004  e1a04000          MOV      r4,r0
000008  e1a0c001          MOV      r12,r1
00000c  e1a05002          MOV      r5,r2
000010  e1a06003          MOV      r6,r3
;;;40         struct R0_R3 config;
;;;41     
;;;42     
;;;43         config.heap_base = (unsigned int)&Image$$RW_RAM1$$ZI$$Limit;
000014  e59f0010          LDR      r0,|L1.44|
000018  e58d0000          STR      r0,[sp,#0]
;;;44         config.stack_base = SP;
00001c  e58dc004          STR      r12,[sp,#4]
;;;45     
;;;46     
;;;47         return config;
000020  e89d000f          LDM      sp,{r0-r3}
000024  e28dd010          ADD      sp,sp,#0x10
;;;48     }
000028  e8bd8070          POP      {r4-r6,pc}
;;;49     /// @endcond HIDDEN_SYMBOLS
                          ENDP

                  |L1.44|
                          DCD      ||Image$$RW_RAM1$$ZI$$Limit||

                          AREA ||i._sys_exit||, CODE, READONLY, ALIGN=2

                  _sys_exit PROC
;;;21     
;;;22     void _sys_exit(int return_code)
000000  e1a00000          MOV      r0,r0
                  |L2.4|
;;;23     {
;;;24     label:  goto label; /* endless loop */
000004  eafffffe          B        |L2.4|
;;;25     }
;;;26     
                          ENDP


                          AREA ||i._ttywrch||, CODE, READONLY, ALIGN=2

                  _ttywrch PROC
;;;26     
;;;27     void _ttywrch(int ch)
000000  e20010ff          AND      r1,r0,#0xff
;;;28     {
;;;29         char tempch = (char)ch;
;;;30         (void)tempch;
;;;31     }
000004  e12fff1e          BX       lr
;;;32     
                          ENDP

