; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\net_config.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\net_config.d --cpu=ARM926EJ-S --apcs=interwork -O0 --diag_suppress=9931,1295,177,550 -I.\Driver\Include -I.\lwip-1.4.1\include -I.\lwip-1.4.1\src\include\ipv4 -I.\lwip-1.4.1\src\include\ -I.\FreeRTOS\Source\include -I.\FreeRTOS\Source\portable\MemMang -I.\FreeRTOS\Source\portable\RVDS\ARM9_NUC970 -D__UVISION_VERSION=524 --omf_browse=.\obj\net_config.crf lwip-1.4.1\net_config.c]
                          ARM

                          AREA ||i.LwIP_Init||, CODE, READONLY, ALIGN=2

                  LwIP_Init PROC
;;;66       */
;;;67     void LwIP_Init(void)
000000  e52de004          PUSH     {lr}
;;;68     {
000004  e24dd01c          SUB      sp,sp,#0x1c
;;;69       struct ip_addr ipaddr;
;;;70       struct ip_addr netmask;
;;;71       struct ip_addr gw;
;;;72     
;;;73       /* Create tcp_ip stack thread */
;;;74       tcpip_init( NULL, NULL );	
000008  e3a01000          MOV      r1,#0
00000c  e1a00001          MOV      r0,r1
000010  ebfffffe          BL       tcpip_init
;;;75     
;;;76         
;;;77       /* IP address setting & display on STM32_evalboard LCD*/
;;;78     #if LWIP_DHCP
;;;79       ipaddr.addr = 0;
;;;80       netmask.addr = 0;
;;;81       gw.addr = 0;
;;;82     #else
;;;83       IP4_ADDR(&ipaddr, 192, 168, 1, 227);
000014  e59f0054          LDR      r0,|L1.112|
000018  e58d0018          STR      r0,[sp,#0x18]
;;;84       IP4_ADDR(&netmask, 225, 225 , 225, 0);
00001c  e59f0050          LDR      r0,|L1.116|
000020  e58d0014          STR      r0,[sp,#0x14]
;;;85       IP4_ADDR(&gw, 192, 168, 1, 1);
000024  e59f004c          LDR      r0,|L1.120|
000028  e58d0010          STR      r0,[sp,#0x10]
;;;86     #endif
;;;87     
;;;88       /* - netif_add(struct netif *netif, struct ip_addr *ipaddr,
;;;89                 struct ip_addr *netmask, struct ip_addr *gw,
;;;90                 void *state, err_t (* init)(struct netif *netif),
;;;91                 err_t (* input)(struct pbuf *p, struct netif *netif))
;;;92         
;;;93        Adds your network interface to the netif_list. Allocate a struct
;;;94       netif and pass a pointer to this structure as the first argument.
;;;95       Give pointers to cleared ip_addr structures when using DHCP,
;;;96       or fill them with sane numbers otherwise. The state pointer may be NULL.
;;;97     
;;;98       The init function pointer must point to a initialization function for
;;;99       your ethernet netif interface. The following code illustrates it's use.*/
;;;100      netif_add(&xnetif, &ipaddr, &netmask, &gw, NULL, &ethernetif_init0, &tcpip_input);
00002c  e59f0048          LDR      r0,|L1.124|
000030  e59f1048          LDR      r1,|L1.128|
000034  e3a02000          MOV      r2,#0
000038  e58d0008          STR      r0,[sp,#8]
00003c  e58d1004          STR      r1,[sp,#4]
000040  e58d2000          STR      r2,[sp,#0]
000044  e28d3010          ADD      r3,sp,#0x10
000048  e28d2014          ADD      r2,sp,#0x14
00004c  e28d1018          ADD      r1,sp,#0x18
000050  e59f002c          LDR      r0,|L1.132|
000054  ebfffffe          BL       netif_add
;;;101    
;;;102     /*  Registers the default network interface. */
;;;103      netif_set_default(&xnetif);
000058  e59f0024          LDR      r0,|L1.132|
00005c  ebfffffe          BL       netif_set_default
;;;104    
;;;105     /*  When the netif is fully configured this function must be called.*/
;;;106      netif_set_up(&xnetif); 
000060  e59f001c          LDR      r0,|L1.132|
000064  ebfffffe          BL       netif_set_up
;;;107    }
000068  e28dd01c          ADD      sp,sp,#0x1c
00006c  e49df004          POP      {pc}
;;;108    
                          ENDP

                  |L1.112|
                          DCD      0xe301a8c0
                  |L1.116|
                          DCD      0x00e1e1e1
                  |L1.120|
                          DCD      0x0101a8c0
                  |L1.124|
                          DCD      tcpip_input
                  |L1.128|
                          DCD      ethernetif_init0
                  |L1.132|
                          DCD      xnetif

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  xnetif
                          %        48
