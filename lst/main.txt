; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=ARM926EJ-S --apcs=interwork -O0 --diag_suppress=9931,1295,177,550 -I.\Driver\Include -I.\lwip-1.4.1\include -I.\lwip-1.4.1\src\include\ipv4 -I.\lwip-1.4.1\src\include\ -I.\FreeRTOS\Source\include -I.\FreeRTOS\Source\portable\MemMang -I.\FreeRTOS\Source\portable\RVDS\ARM9_NUC970 -I"C:\Program Study\Keil5\ARM\RV31\INC" -I"C:\Program Study\Keil5\ARM\CMSIS\Include" -I"C:\Program Study\Keil5\ARM\INC\Toshiba" -D__UVISION_VERSION=524 --omf_browse=.\obj\main.crf main.c]
                          ARM

                          AREA ||i.http_acpt||, CODE, READONLY, ALIGN=2

                  http_acpt PROC
;;;139    /*accept callback function */
;;;140    static err_t http_acpt(void *arg,struct tcp_pcb *pcb, err_t err)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;141    {
000004  e1a05000          MOV      r5,r0
000008  e1a04001          MOV      r4,r1
00000c  e1a06002          MOV      r6,r2
;;;142        /* Setup the function http_recv() to be called when data arrives.*/
;;;143        tcp_recv(pcb, http_recv);
000010  e59f100c          LDR      r1,|L1.36|
000014  e1a00004          MOV      r0,r4
000018  ebfffffe          BL       tcp_recv
;;;144        return ERR_OK;
00001c  e3a00000          MOV      r0,#0
;;;145    }
000020  e8bd8070          POP      {r4-r6,pc}
;;;146    
                          ENDP

                  |L1.36|
                          DCD      http_recv

                          AREA ||i.http_recv||, CODE, READONLY, ALIGN=2

                  http_recv PROC
;;;103    /* recv callback function */
;;;104    static err_t http_recv(void *arg, struct tcp_pcb *pcb, struct pbuf*p, err_t err)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;105    {
000004  e1a07000          MOV      r7,r0
000008  e1a05001          MOV      r5,r1
00000c  e1a04002          MOV      r4,r2
000010  e1a08003          MOV      r8,r3
;;;106        CHAR *rq;
;;;107        /* If we got a NULL pbuf in p, the remote end has closed
;;;108        the connection.*/
;;;109        if (p != NULL)
000014  e3540000          CMP      r4,#0
000018  0a000023          BEQ      |L2.172|
;;;110        {
;;;111    
;;;112            /* The payload pointer in the pbuf contains the data
;;;113            in the TCP segment.*/
;;;114    
;;;115            rq = p->payload;
00001c  e5946004          LDR      r6,[r4,#4]
;;;116            /* Get and response the request file. 
;;;117               To support other webpage, extent the if statement below 
;;;118               If the object is larger than single TCP payload, need to send reset
;;;119               for the content in main loop and then close the pcb */
;;;120            if ((strncmp(rq, "GET /index.htm", 14) == 0)||(strncmp(rq, "GET / ", 6) == 0)) {
000020  e3a0200e          MOV      r2,#0xe
000024  e28f1088          ADR      r1,|L2.180|
000028  e1a00006          MOV      r0,r6
00002c  ebfffffe          BL       strncmp
000030  e3500000          CMP      r0,#0
000034  0a000005          BEQ      |L2.80|
000038  e3a02006          MOV      r2,#6
00003c  e28f1080          ADR      r1,|L2.196|
000040  e1a00006          MOV      r0,r6
000044  ebfffffe          BL       strncmp
000048  e3500000          CMP      r0,#0
00004c  1a00000a          BNE      |L2.124|
                  |L2.80|
;;;121                /* Send the webpage to the remote host. A zero
;;;122                in the last argument means that the data should
;;;123                not be copied into internal buffers. */
;;;124                tcp_recved(pcb, p->tot_len);
000050  e1d410b8          LDRH     r1,[r4,#8]
000054  e1a00005          MOV      r0,r5
000058  ebfffffe          BL       tcp_recved
;;;125                tcp_write(pcb, index, sizeof(index) -1, 0);
00005c  e3a03000          MOV      r3,#0
000060  e59f2064          LDR      r2,|L2.204|
000064  e59f1064          LDR      r1,|L2.208|
000068  e1a00005          MOV      r0,r5
00006c  ebfffffe          BL       tcp_write
;;;126                tcp_close(pcb);
000070  e1a00005          MOV      r0,r5
000074  ebfffffe          BL       tcp_close
000078  ea000009          B        |L2.164|
                  |L2.124|
;;;127            } else {    // err 404
;;;128                tcp_recved(pcb, p->tot_len);
00007c  e1d410b8          LDRH     r1,[r4,#8]
000080  e1a00005          MOV      r0,r5
000084  ebfffffe          BL       tcp_recved
;;;129                tcp_write(pcb, err404, sizeof(err404) -1, 0);
000088  e3a03000          MOV      r3,#0
00008c  e3a020a8          MOV      r2,#0xa8
000090  e59f103c          LDR      r1,|L2.212|
000094  e1a00005          MOV      r0,r5
000098  ebfffffe          BL       tcp_write
;;;130                tcp_close(pcb);
00009c  e1a00005          MOV      r0,r5
0000a0  ebfffffe          BL       tcp_close
                  |L2.164|
;;;131            }
;;;132            /* Free the pbuf. */
;;;133            pbuf_free(p);
0000a4  e1a00004          MOV      r0,r4
0000a8  ebfffffe          BL       pbuf_free
                  |L2.172|
;;;134        }
;;;135    
;;;136        return(ERR_OK);
0000ac  e3a00000          MOV      r0,#0
;;;137    }
0000b0  e8bd81f0          POP      {r4-r8,pc}
;;;138    
                          ENDP

                  |L2.180|
0000b4  47455420          DCB      "GET /index.htm",0
0000b8  2f696e64
0000bc  65782e68
0000c0  746d00  
0000c3  00                DCB      0
                  |L2.196|
0000c4  47455420          DCB      "GET / ",0
0000c8  2f2000  
0000cb  00                DCB      0
                  |L2.204|
                          DCD      0x0000020e
                  |L2.208|
                          DCD      index
                  |L2.212|
                          DCD      err404

                          AREA ||i.httpd_init||, CODE, READONLY, ALIGN=2

                  httpd_init PROC
;;;147    /*httpd initialization function.*/
;;;148    static void httpd_init(void)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;149    {
;;;150        struct tcp_pcb *pcb, *pcb_listen;
;;;151        /*Create a new TCP PCB.*/
;;;152        pcb = tcp_new();
000004  ebfffffe          BL       tcp_new
000008  e1a05000          MOV      r5,r0
;;;153        /*Bind the PCB to TCP port 80.*/
;;;154        if (tcp_bind(pcb,NULL,80) != ERR_OK)
00000c  e3a02050          MOV      r2,#0x50
000010  e3a01000          MOV      r1,#0
000014  e1a00005          MOV      r0,r5
000018  ebfffffe          BL       tcp_bind
00001c  e3500000          CMP      r0,#0
000020  0a000001          BEQ      |L3.44|
;;;155            sysprintf("bind error\n");
000024  e28f0020          ADR      r0,|L3.76|
000028  ebfffffe          BL       sysprintf
                  |L3.44|
;;;156        /*Change TCP state to LISTEN.*/
;;;157        pcb_listen = tcp_listen(pcb);
00002c  e3a010ff          MOV      r1,#0xff
000030  e1a00005          MOV      r0,r5
000034  ebfffffe          BL       tcp_listen_with_backlog
000038  e1a04000          MOV      r4,r0
;;;158        /*Setup http_accet() function to be called
;;;159        when a new connection arrives.*/
;;;160        tcp_accept(pcb_listen, http_acpt);
00003c  e59f1014          LDR      r1,|L3.88|
000040  e1a00004          MOV      r0,r4
000044  ebfffffe          BL       tcp_accept
;;;161    }
000048  e8bd8070          POP      {r4-r6,pc}
;;;162    
                          ENDP

                  |L3.76|
00004c  62696e64          DCB      "bind error\n",0
000050  20657272
000054  6f720a00
                  |L3.88|
                          DCD      http_acpt

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;200    static void test_task( void *pvParameters );
;;;201    int main(void)
000000  e92d401c          PUSH     {r2-r4,lr}
;;;202    {
;;;203        sysDisableCache();
000004  ebfffffe          BL       sysDisableCache
;;;204        sysFlushCache(I_D_CACHE);
000008  e3a00008          MOV      r0,#8
00000c  ebfffffe          BL       sysFlushCache
;;;205        sysEnableCache(CACHE_WRITE_BACK);
000010  e3a00000          MOV      r0,#0
000014  ebfffffe          BL       sysEnableCache
;;;206        sysInitializeUART();
000018  ebfffffe          BL       sysInitializeUART
;;;207        
;;;208        xTaskCreate( test_task, "test_task", 512, NULL, 10, NULL );
00001c  e3a00000          MOV      r0,#0
000020  e3a0100a          MOV      r1,#0xa
000024  e58d0004          STR      r0,[sp,#4]
000028  e1a03000          MOV      r3,r0
00002c  e3a02c02          MOV      r2,#0x200
000030  e58d1000          STR      r1,[sp,#0]
000034  e28f1010          ADR      r1,|L4.76|
000038  e59f0018          LDR      r0,|L4.88|
00003c  ebfffffe          BL       xTaskCreate
;;;209    
;;;210    		//ÏµÍ³Æô¶¯
;;;211        vTaskStartScheduler();
000040  ebfffffe          BL       vTaskStartScheduler
;;;212    //    net_init();
;;;213    //    httpd_init();
;;;214        while(1);
000044  e1a00000          MOV      r0,r0
                  |L4.72|
000048  eafffffe          B        |L4.72|
;;;215    //    while (1)
;;;216    //        sys_check_timeouts();  // All network traffic is handled in interrupt handler
;;;217    }
;;;218    
                          ENDP

                  |L4.76|
00004c  74657374          DCB      "test_task",0
000050  5f746173
000054  6b00    
000056  00                DCB      0
000057  00                DCB      0
                  |L4.88|
                          DCD      test_task

                          AREA ||i.net_init||, CODE, READONLY, ALIGN=2

                  net_init PROC
;;;167    /* network initialization function.*/
;;;168    static void net_init(void)
000000  e92d400e          PUSH     {r1-r3,lr}
;;;169    {
;;;170        // LwIP needs a timer @ 100Hz. To use another timer source, please modify sys_now() in sys_arch.c as well
;;;171        sysStartTimer(TIMER0, 100, PERIODIC_MODE);  
000004  e3a02001          MOV      r2,#1
000008  e3a01064          MOV      r1,#0x64
00000c  e3a00000          MOV      r0,#0
000010  ebfffffe          BL       sysStartTimer
;;;172        
;;;173    #ifdef USE_DHCP
;;;174    
;;;175        IP4_ADDR(&gw, 0, 0, 0, 0);
;;;176        IP4_ADDR(&ipaddr, 0, 0, 0, 0);
;;;177        IP4_ADDR(&netmask, 0, 0, 0, 0);
;;;178    
;;;179    #else
;;;180    
;;;181        IP4_ADDR(&gw, 192, 168, 1, 1);
000014  e59f0060          LDR      r0,|L5.124|
000018  e59f1060          LDR      r1,|L5.128|
00001c  e5810000          STR      r0,[r1,#0]  ; gw
;;;182        IP4_ADDR(&ipaddr, 192, 168, 1, 227);
000020  e28004e2          ADD      r0,r0,#0xe2000000
000024  e59f1058          LDR      r1,|L5.132|
000028  e5810000          STR      r0,[r1,#0]  ; ipaddr
;;;183        IP4_ADDR(&netmask, 255, 255, 255, 0);
00002c  e3e004ff          MVN      r0,#0xff000000
000030  e59f1050          LDR      r1,|L5.136|
000034  e5810000          STR      r0,[r1,#0]  ; netmask
;;;184    
;;;185    #endif
;;;186    
;;;187        lwip_init();
000038  ebfffffe          BL       lwip_init
;;;188        // To use EMAC1, change ethernetif_init0 to ethernetif_init1
;;;189        netif_add(&netif, &ipaddr, &netmask, &gw, NULL, ethernetif_init0, ethernet_input);    
00003c  e59f0048          LDR      r0,|L5.140|
000040  e59f1048          LDR      r1,|L5.144|
000044  e3a02000          MOV      r2,#0
000048  e59f3030          LDR      r3,|L5.128|
00004c  e58d2000          STR      r2,[sp,#0]
000050  e59f2030          LDR      r2,|L5.136|
000054  e58d1004          STR      r1,[sp,#4]
000058  e59f1024          LDR      r1,|L5.132|
00005c  e58d0008          STR      r0,[sp,#8]
000060  e59f002c          LDR      r0,|L5.148|
000064  ebfffffe          BL       netif_add
;;;190        netif_set_default(&netif);
000068  e59f0024          LDR      r0,|L5.148|
00006c  ebfffffe          BL       netif_set_default
;;;191    
;;;192    #ifdef USE_DHCP
;;;193        dhcp_start(&netif);
;;;194    #else
;;;195        netif_set_up(&netif);
000070  e59f001c          LDR      r0,|L5.148|
000074  ebfffffe          BL       netif_set_up
;;;196    #endif
;;;197    }
000078  e8bd800e          POP      {r1-r3,pc}
;;;198    
                          ENDP

                  |L5.124|
                          DCD      0x0101a8c0
                  |L5.128|
                          DCD      ||gw||
                  |L5.132|
                          DCD      ipaddr
                  |L5.136|
                          DCD      netmask
                  |L5.140|
                          DCD      ethernet_input
                  |L5.144|
                          DCD      ethernetif_init0
                  |L5.148|
                          DCD      netif

                          AREA ||i.test_task||, CODE, READONLY, ALIGN=2

                  test_task PROC
;;;218    
;;;219    static void test_task( void *pvParameters )
000000  ea000003          B        |L6.20|
                  |L6.4|
;;;220    {
;;;221    //    net_init();
;;;222    //    httpd_init();
;;;223        while (1)
;;;224        {
;;;225            vTaskDelay( 100/portTICK_PERIOD_MS );
000004  e3a00064          MOV      r0,#0x64
000008  ebfffffe          BL       vTaskDelay
;;;226            sysprintf("over\n");
00000c  e28f0004          ADR      r0,|L6.24|
000010  ebfffffe          BL       sysprintf
                  |L6.20|
000014  eafffffa          B        |L6.4|
;;;227        }
;;;228    }
;;;229    
                          ENDP

                  |L6.24|
000018  6f766572          DCB      "over\n",0
00001c  0a00    
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  netif
                          %        52

                          AREA ||.data||, DATA, ALIGN=2

                  index
000000  48545450          DCB      0x48,0x54,0x54,0x50
000004  2f312e30          DCB      0x2f,0x31,0x2e,0x30
000008  20323030          DCB      0x20,0x32,0x30,0x30
00000c  204f4b0d          DCB      0x20,0x4f,0x4b,0x0d
000010  0a536572          DCB      0x0a,0x53,0x65,0x72
000014  7665723a          DCB      0x76,0x65,0x72,0x3a
000018  206c7749          DCB      0x20,0x6c,0x77,0x49
00001c  502f7072          DCB      0x50,0x2f,0x70,0x72
000020  652d302e          DCB      0x65,0x2d,0x30,0x2e
000024  36202868          DCB      0x36,0x20,0x28,0x68
000028  7474703a          DCB      0x74,0x74,0x70,0x3a
00002c  2f2f7777          DCB      0x2f,0x2f,0x77,0x77
000030  772e7369          DCB      0x77,0x2e,0x73,0x69
000034  63732e73          DCB      0x63,0x73,0x2e,0x73
000038  652f7e61          DCB      0x65,0x2f,0x7e,0x61
00003c  64616d2f          DCB      0x64,0x61,0x6d,0x2f
000040  6c776970          DCB      0x6c,0x77,0x69,0x70
000044  2f290d0a          DCB      0x2f,0x29,0x0d,0x0a
000048  436f6e74          DCB      0x43,0x6f,0x6e,0x74
00004c  656e742d          DCB      0x65,0x6e,0x74,0x2d
000050  74797065          DCB      0x74,0x79,0x70,0x65
000054  3a207465          DCB      0x3a,0x20,0x74,0x65
000058  78742f68          DCB      0x78,0x74,0x2f,0x68
00005c  746d6c0d          DCB      0x74,0x6d,0x6c,0x0d
000060  0a0d0a3c          DCB      0x0a,0x0d,0x0a,0x3c
000064  48544d4c          DCB      0x48,0x54,0x4d,0x4c
000068  3e0d0a3c          DCB      0x3e,0x0d,0x0a,0x3c
00006c  424f4459          DCB      0x42,0x4f,0x44,0x59
000070  3e0d0a4e          DCB      0x3e,0x0d,0x0a,0x4e
000074  55433937          DCB      0x55,0x43,0x39,0x37
000078  30207765          DCB      0x30,0x20,0x77,0x65
00007c  62207365          DCB      0x62,0x20,0x73,0x65
000080  72766572          DCB      0x72,0x76,0x65,0x72
000084  2064656d          DCB      0x20,0x64,0x65,0x6d
000088  6f206261          DCB      0x6f,0x20,0x62,0x61
00008c  73656420          DCB      0x73,0x65,0x64,0x20
000090  6f6e204c          DCB      0x6f,0x6e,0x20,0x4c
000094  7749500d          DCB      0x77,0x49,0x50,0x0d
000098  0a3c703e          DCB      0x0a,0x3c,0x70,0x3e
00009c  0d0a5468          DCB      0x0d,0x0a,0x54,0x68
0000a0  65204e55          DCB      0x65,0x20,0x4e,0x55
0000a4  43393730          DCB      0x43,0x39,0x37,0x30
0000a8  20736572          DCB      0x20,0x73,0x65,0x72
0000ac  69657320          DCB      0x69,0x65,0x73,0x20
0000b0  74617267          DCB      0x74,0x61,0x72,0x67
0000b4  65746564          DCB      0x65,0x74,0x65,0x64
0000b8  20666f72          DCB      0x20,0x66,0x6f,0x72
0000bc  2067656e          DCB      0x20,0x67,0x65,0x6e
0000c0  6572616c          DCB      0x65,0x72,0x61,0x6c
0000c4  20707572          DCB      0x20,0x70,0x75,0x72
0000c8  706f7365          DCB      0x70,0x6f,0x73,0x65
0000cc  2033322d          DCB      0x20,0x33,0x32,0x2d
0000d0  62697420          DCB      0x62,0x69,0x74,0x20
0000d4  6d696372          DCB      0x6d,0x69,0x63,0x72
0000d8  6f636f6e          DCB      0x6f,0x63,0x6f,0x6e
0000dc  74726f6c          DCB      0x74,0x72,0x6f,0x6c
0000e0  6c657220          DCB      0x6c,0x65,0x72,0x20
0000e4  0d0a656d          DCB      0x0d,0x0a,0x65,0x6d
0000e8  62656473          DCB      0x62,0x65,0x64,0x73
0000ec  20616e20          DCB      0x20,0x61,0x6e,0x20
0000f0  6f757473          DCB      0x6f,0x75,0x74,0x73
0000f4  74616e64          DCB      0x74,0x61,0x6e,0x64
0000f8  696e6720          DCB      0x69,0x6e,0x67,0x20
0000fc  43505520          DCB      0x43,0x50,0x55,0x20
000100  636f7265          DCB      0x63,0x6f,0x72,0x65
000104  2041524d          DCB      0x20,0x41,0x52,0x4d
000108  39323645          DCB      0x39,0x32,0x36,0x45
00010c  4a2d532c          DCB      0x4a,0x2d,0x53,0x2c
000110  20612052          DCB      0x20,0x61,0x20,0x52
000114  49534320          DCB      0x49,0x53,0x43,0x20
000118  70726f63          DCB      0x70,0x72,0x6f,0x63
00011c  6573736f          DCB      0x65,0x73,0x73,0x6f
000120  72206465          DCB      0x72,0x20,0x64,0x65
000124  7369676e          DCB      0x73,0x69,0x67,0x6e
000128  6564200d          DCB      0x65,0x64,0x20,0x0d
00012c  0a627920          DCB      0x0a,0x62,0x79,0x20
000130  41647661          DCB      0x41,0x64,0x76,0x61
000134  6e636564          DCB      0x6e,0x63,0x65,0x64
000138  20524953          DCB      0x20,0x52,0x49,0x53
00013c  43204d61          DCB      0x43,0x20,0x4d,0x61
000140  6368696e          DCB      0x63,0x68,0x69,0x6e
000144  6573204c          DCB      0x65,0x73,0x20,0x4c
000148  74642e2c          DCB      0x74,0x64,0x2e,0x2c
00014c  2072756e          DCB      0x20,0x72,0x75,0x6e
000150  73207570          DCB      0x73,0x20,0x75,0x70
000154  20746f20          DCB      0x20,0x74,0x6f,0x20
000158  33303020          DCB      0x33,0x30,0x30,0x20
00015c  4d487a2c          DCB      0x4d,0x48,0x7a,0x2c
000160  20776974          DCB      0x20,0x77,0x69,0x74
000164  68203136          DCB      0x68,0x20,0x31,0x36
000168  204b4220          DCB      0x20,0x4b,0x42,0x20
00016c  492d6361          DCB      0x49,0x2d,0x63,0x61
000170  6368652c          DCB      0x63,0x68,0x65,0x2c
000174  200d0a31          DCB      0x20,0x0d,0x0a,0x31
000178  36204b42          DCB      0x36,0x20,0x4b,0x42
00017c  20442d63          DCB      0x20,0x44,0x2d,0x63
000180  61636865          DCB      0x61,0x63,0x68,0x65
000184  20616e64          DCB      0x20,0x61,0x6e,0x64
000188  204d4d55          DCB      0x20,0x4d,0x4d,0x55
00018c  2c203536          DCB      0x2c,0x20,0x35,0x36
000190  4b422065          DCB      0x4b,0x42,0x20,0x65
000194  6d626564          DCB      0x6d,0x62,0x65,0x64
000198  64656420          DCB      0x64,0x65,0x64,0x20
00019c  5352414d          DCB      0x53,0x52,0x41,0x4d
0001a0  20616e64          DCB      0x20,0x61,0x6e,0x64
0001a4  20313620          DCB      0x20,0x31,0x36,0x20
0001a8  4b422049          DCB      0x4b,0x42,0x20,0x49
0001ac  42522028          DCB      0x42,0x52,0x20,0x28
0001b0  496e7465          DCB      0x49,0x6e,0x74,0x65
0001b4  726e616c          DCB      0x72,0x6e,0x61,0x6c
0001b8  20426f6f          DCB      0x20,0x42,0x6f,0x6f
0001bc  74200d0a          DCB      0x74,0x20,0x0d,0x0a
0001c0  524f4d29          DCB      0x52,0x4f,0x4d,0x29
0001c4  20666f72          DCB      0x20,0x66,0x6f,0x72
0001c8  20626f6f          DCB      0x20,0x62,0x6f,0x6f
0001cc  74696e67          DCB      0x74,0x69,0x6e,0x67
0001d0  2066726f          DCB      0x20,0x66,0x72,0x6f
0001d4  6d20654d          DCB      0x6d,0x20,0x65,0x4d
0001d8  4d432c20          DCB      0x4d,0x43,0x2c,0x20
0001dc  5553422c          DCB      0x55,0x53,0x42,0x2c
0001e0  204e414e          DCB      0x20,0x4e,0x41,0x4e
0001e4  4420616e          DCB      0x44,0x20,0x61,0x6e
0001e8  64205350          DCB      0x64,0x20,0x53,0x50
0001ec  4920464c          DCB      0x49,0x20,0x46,0x4c
0001f0  4153482e          DCB      0x41,0x53,0x48,0x2e
0001f4  200d0a3c          DCB      0x20,0x0d,0x0a,0x3c
0001f8  2f703e0d          DCB      0x2f,0x70,0x3e,0x0d
0001fc  0a3c2f42          DCB      0x0a,0x3c,0x2f,0x42
000200  4f44593e          DCB      0x4f,0x44,0x59,0x3e
000204  0d0a3c2f          DCB      0x0d,0x0a,0x3c,0x2f
000208  48544d4c          DCB      0x48,0x54,0x4d,0x4c
00020c  3e0d0a            DCB      0x3e,0x0d,0x0a
                  err404
00020f  48                DCB      0x48
000210  5454502f          DCB      0x54,0x54,0x50,0x2f
000214  312e3020          DCB      0x31,0x2e,0x30,0x20
000218  34303420          DCB      0x34,0x30,0x34,0x20
00021c  46696c65          DCB      0x46,0x69,0x6c,0x65
000220  206e6f74          DCB      0x20,0x6e,0x6f,0x74
000224  20666f75          DCB      0x20,0x66,0x6f,0x75
000228  6e640d0a          DCB      0x6e,0x64,0x0d,0x0a
00022c  53657276          DCB      0x53,0x65,0x72,0x76
000230  65723a20          DCB      0x65,0x72,0x3a,0x20
000234  6c774950          DCB      0x6c,0x77,0x49,0x50
000238  2f707265          DCB      0x2f,0x70,0x72,0x65
00023c  2d302e36          DCB      0x2d,0x30,0x2e,0x36
000240  20286874          DCB      0x20,0x28,0x68,0x74
000244  74703a2f          DCB      0x74,0x70,0x3a,0x2f
000248  2f777777          DCB      0x2f,0x77,0x77,0x77
00024c  2e736963          DCB      0x2e,0x73,0x69,0x63
000250  732e7365          DCB      0x73,0x2e,0x73,0x65
000254  2f7e6164          DCB      0x2f,0x7e,0x61,0x64
000258  616d2f6c          DCB      0x61,0x6d,0x2f,0x6c
00025c  7769702f          DCB      0x77,0x69,0x70,0x2f
000260  290d0a43          DCB      0x29,0x0d,0x0a,0x43
000264  6f6e7465          DCB      0x6f,0x6e,0x74,0x65
000268  6e742d74          DCB      0x6e,0x74,0x2d,0x74
00026c  7970653a          DCB      0x79,0x70,0x65,0x3a
000270  20746578          DCB      0x20,0x74,0x65,0x78
000274  742f6874          DCB      0x74,0x2f,0x68,0x74
000278  6d6c0d0a          DCB      0x6d,0x6c,0x0d,0x0a
00027c  0d0a3c48          DCB      0x0d,0x0a,0x3c,0x48
000280  544d4c3e          DCB      0x54,0x4d,0x4c,0x3e
000284  0d0a3c42          DCB      0x0d,0x0a,0x3c,0x42
000288  4f44593e          DCB      0x4f,0x44,0x59,0x3e
00028c  0d0a4552          DCB      0x0d,0x0a,0x45,0x52
000290  524f5220          DCB      0x52,0x4f,0x52,0x20
000294  2d204669          DCB      0x2d,0x20,0x46,0x69
000298  6c65206e          DCB      0x6c,0x65,0x20,0x6e
00029c  6f742066          DCB      0x6f,0x74,0x20,0x66
0002a0  6f756e64          DCB      0x6f,0x75,0x6e,0x64
0002a4  0d0a3c2f          DCB      0x0d,0x0a,0x3c,0x2f
0002a8  424f4459          DCB      0x42,0x4f,0x44,0x59
0002ac  3e0d0a3c          DCB      0x3e,0x0d,0x0a,0x3c
0002b0  2f48544d          DCB      0x2f,0x48,0x54,0x4d
0002b4  4c3e0d0a          DCB      0x4c,0x3e,0x0d,0x0a
                  my_mac_addr0
0002b8  00000055          DCB      0x00,0x00,0x00,0x55
0002bc  6677              DCB      0x66,0x77
                  my_mac_addr1
0002be  0000              DCB      0x00,0x00
0002c0  00000001          DCB      0x00,0x00,0x00,0x01
                  ||gw||
                          DCD      0x00000000
                  ipaddr
                          DCD      0x00000000
                  netmask
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
