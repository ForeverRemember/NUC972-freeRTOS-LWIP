; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\def.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\def.d --cpu=ARM926EJ-S --apcs=interwork -O0 --diag_suppress=9931,1295,177,550 -I.\Driver\Include -I.\lwip-1.4.1\include -I.\lwip-1.4.1\src\include\ipv4 -I.\lwip-1.4.1\src\include\ -I.\FreeRTOS\Source\include -I.\FreeRTOS\Source\portable\MemMang -I.\FreeRTOS\Source\portable\RVDS\ARM9_NUC970 -I"C:\Program Study\Keil5\ARM\RV31\INC" -I"C:\Program Study\Keil5\ARM\CMSIS\Include" -I"C:\Program Study\Keil5\ARM\INC\Toshiba" -D__UVISION_VERSION=524 --omf_browse=.\obj\def.crf lwip-1.4.1\src\core\def.c]
                          ARM

                          AREA ||i.lwip_htonl||, CODE, READONLY, ALIGN=2

                  lwip_htonl PROC
;;;87     u32_t
;;;88     lwip_htonl(u32_t n)
000000  e1a01000          MOV      r1,r0
;;;89     {
;;;90       return ((n & 0xff) << 24) |
000004  e1a00c01          LSL      r0,r1,#24
000008  e2012cff          AND      r2,r1,#0xff00
00000c  e1800402          ORR      r0,r0,r2,LSL #8
000010  e20128ff          AND      r2,r1,#0xff0000
000014  e1800422          ORR      r0,r0,r2,LSR #8
000018  e1800c21          ORR      r0,r0,r1,LSR #24
;;;91         ((n & 0xff00) << 8) |
;;;92         ((n & 0xff0000UL) >> 8) |
;;;93         ((n & 0xff000000UL) >> 24);
;;;94     }
00001c  e12fff1e          BX       lr
;;;95     
                          ENDP


                          AREA ||i.lwip_htons||, CODE, READONLY, ALIGN=2

                  lwip_htons PROC
;;;63     u16_t
;;;64     lwip_htons(u16_t n)
000000  e1a01000          MOV      r1,r0
;;;65     {
;;;66       return ((n & 0xff) << 8) | ((n & 0xff00) >> 8);
000004  e1a00c01          LSL      r0,r1,#24
000008  e1a00820          LSR      r0,r0,#16
00000c  e2012cff          AND      r2,r1,#0xff00
000010  e1800442          ORR      r0,r0,r2,ASR #8
;;;67     }
000014  e12fff1e          BX       lr
;;;68     
                          ENDP


                          AREA ||i.lwip_ntohl||, CODE, READONLY, ALIGN=2

                  lwip_ntohl PROC
;;;102    u32_t
;;;103    lwip_ntohl(u32_t n)
000000  e52de004          PUSH     {lr}
;;;104    {
000004  e1a03000          MOV      r3,r0
;;;105      return lwip_htonl(n);
000008  e1a00003          MOV      r0,r3
00000c  ebfffffe          BL       lwip_htonl
;;;106    }
000010  e49df004          POP      {pc}
;;;107    
                          ENDP


                          AREA ||i.lwip_ntohs||, CODE, READONLY, ALIGN=2

                  lwip_ntohs PROC
;;;75     u16_t
;;;76     lwip_ntohs(u16_t n)
000000  e52de004          PUSH     {lr}
;;;77     {
000004  e1a03000          MOV      r3,r0
;;;78       return lwip_htons(n);
000008  e1a00003          MOV      r0,r3
00000c  ebfffffe          BL       lwip_htons
;;;79     }
000010  e49df004          POP      {pc}
;;;80     
                          ENDP

