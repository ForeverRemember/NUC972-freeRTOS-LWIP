; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\timers.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\timers.d --cpu=ARM926EJ-S --apcs=interwork --diag_suppress=9931,1295,177,550 -I.\Driver\Include -I.\lwip-1.4.1\include -I.\lwip-1.4.1\src\include\ipv4 -I.\lwip-1.4.1\src\include\ -I"C:\Program Study\Keil5\ARM\RV31\INC" -I"C:\Program Study\Keil5\ARM\CMSIS\Include" -I"C:\Program Study\Keil5\ARM\INC\Toshiba" -D__UVISION_VERSION=524 --omf_browse=.\obj\timers.crf lwip-1.4.1\src\core\timers.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  sys_timeout PROC
;;;265    void
;;;266    sys_timeout(u32_t msecs, sys_timeout_handler handler, void *arg)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;267    #endif /* LWIP_DEBUG_TIMERNAMES */
;;;268    {
000004  e1a04000          MOV      r4,r0
000008  e1a06002          MOV      r6,r2
00000c  e1a05001          MOV      r5,r1
;;;269      struct sys_timeo *timeout, *t;
;;;270    
;;;271      timeout = (struct sys_timeo *)memp_malloc(MEMP_SYS_TIMEOUT);
000010  e3a00005          MOV      r0,#5
000014  ebfffffe          BL       memp_malloc
;;;272      if (timeout == NULL) {
000018  e3500000          CMP      r0,#0
00001c  0a00000d          BEQ      |L1.88|
;;;273        LWIP_ASSERT("sys_timeout: timeout != NULL, pool MEMP_SYS_TIMEOUT is empty", timeout != NULL);
;;;274        return;
;;;275      }
;;;276      timeout->next = NULL;
000020  e3a02000          MOV      r2,#0
;;;277      timeout->h = handler;
;;;278      timeout->arg = arg;
;;;279      timeout->time = msecs;
;;;280    #if LWIP_DEBUG_TIMERNAMES
;;;281      timeout->handler_name = handler_name;
;;;282      LWIP_DEBUGF(TIMERS_DEBUG, ("sys_timeout: %p msecs=%"U32_F" handler=%s arg=%p\n",
;;;283        (void *)timeout, msecs, handler_name, (void *)arg));
;;;284    #endif /* LWIP_DEBUG_TIMERNAMES */
;;;285    
;;;286      if (next_timeout == NULL) {
000024  e8800074          STM      r0,{r2,r4-r6}
000028  e59f31d4          LDR      r3,|L1.516|
00002c  e5931000          LDR      r1,[r3,#0]  ; next_timeout
000030  e3510000          CMP      r1,#0
000034  0a000005          BEQ      |L1.80|
;;;287        next_timeout = timeout;
;;;288        return;
;;;289      }
;;;290    
;;;291      if (next_timeout->time > msecs) {
000038  e5912004          LDR      r2,[r1,#4]
00003c  e1520004          CMP      r2,r4
;;;292        next_timeout->time -= msecs;
000040  80422004          SUBHI    r2,r2,r4
000044  85812004          STRHI    r2,[r1,#4]
;;;293        timeout->next = next_timeout;
000048  85801000          STRHI    r1,[r0,#0]
00004c  9a000013          BLS      |L1.160|
                  |L1.80|
000050  e5830000          STR      r0,[r3,#0]            ;287  ; next_timeout
;;;294        next_timeout = timeout;
;;;295      } else {
;;;296        for(t = next_timeout; t != NULL; t = t->next) {
;;;297          timeout->time -= t->time;
;;;298          if (t->next == NULL || t->next->time > timeout->time) {
;;;299            if (t->next != NULL) {
;;;300              t->next->time -= timeout->time;
;;;301            }
;;;302            timeout->next = t->next;
;;;303            t->next = timeout;
;;;304            break;
;;;305          }
;;;306        }
;;;307      }
;;;308    }
000054  e8bd8070          POP      {r4-r6,pc}
                  |L1.88|
000058  e8bd4070          POP      {r4-r6,lr}            ;273
00005c  e59f21c4          LDR      r2,|L1.552|
000060  e28f3e1a          ADR      r3,|L1.520|
000064  e28f1d07          ADR      r1,|L1.556|
000068  e28f0f7f          ADR      r0,|L1.620|
00006c  eafffffe          B        sysprintf
                  |L1.112|
000070  e592c004          LDR      r12,[r2,#4]           ;298
000074  e15c0003          CMP      r12,r3                ;298
000078  91a01002          MOVLS    r1,r2                 ;298
00007c  9a000007          BLS      |L1.160|
000080  e5923004          LDR      r3,[r2,#4]            ;300
000084  e590c004          LDR      r12,[r0,#4]           ;300
000088  e043300c          SUB      r3,r3,r12             ;300
00008c  e5823004          STR      r3,[r2,#4]            ;300
                  |L1.144|
000090  e5912000          LDR      r2,[r1,#0]            ;302
000094  e5802000          STR      r2,[r0,#0]            ;303
000098  e5810000          STR      r0,[r1,#0]            ;303
00009c  e8bd8070          POP      {r4-r6,pc}
                  |L1.160|
0000a0  e5902004          LDR      r2,[r0,#4]            ;297
0000a4  e5913004          LDR      r3,[r1,#4]            ;297
0000a8  e0423003          SUB      r3,r2,r3              ;297
0000ac  e5803004          STR      r3,[r0,#4]            ;298
0000b0  e5912000          LDR      r2,[r1,#0]            ;298
0000b4  e3520000          CMP      r2,#0                 ;298
0000b8  0afffff4          BEQ      |L1.144|
0000bc  eaffffeb          B        |L1.112|
;;;309    
                          ENDP

                  tcpip_tcp_timer PROC
;;;78     static void
;;;79     tcpip_tcp_timer(void *arg)
0000c0  e92d4010          PUSH     {r4,lr}
;;;80     {
;;;81       LWIP_UNUSED_ARG(arg);
;;;82     
;;;83       /* call TCP timer handler */
;;;84       tcp_tmr();
0000c4  ebfffffe          BL       tcp_tmr
;;;85       /* timer still needed? */
;;;86       if (tcp_active_pcbs || tcp_tw_pcbs) {
0000c8  e59f01c4          LDR      r0,|L1.660|
0000cc  e59f11c4          LDR      r1,|L1.664|
0000d0  e5900000          LDR      r0,[r0,#0]  ; tcp_active_pcbs
0000d4  e5911000          LDR      r1,[r1,#0]  ; tcp_tw_pcbs
0000d8  e1900001          ORRS     r0,r0,r1
;;;87         /* restart timer */
;;;88         sys_timeout(TCP_TMR_INTERVAL, tcpip_tcp_timer, NULL);
;;;89       } else {
;;;90         /* disable timer */
;;;91         tcpip_tcp_timer_active = 0;
0000dc  059f1120          LDREQ    r1,|L1.516|
0000e0  03a00000          MOVEQ    r0,#0
0000e4  05810008          STREQ    r0,[r1,#8]  ; tcpip_tcp_timer_active
;;;92       }
;;;93     }
0000e8  08bd8010          POPEQ    {r4,pc}
0000ec  e8bd4010          POP      {r4,lr}               ;88
0000f0  e59f11a4          LDR      r1,|L1.668|
0000f4  e3a02000          MOV      r2,#0                 ;88
0000f8  e3a000fa          MOV      r0,#0xfa              ;88
0000fc  eafffffe          B        sys_timeout
;;;94     
                          ENDP

                  tcp_timer_needed PROC
;;;100    void
;;;101    tcp_timer_needed(void)
000100  e59f00fc          LDR      r0,|L1.516|
;;;102    {
;;;103      /* timer is off but needed again? */
;;;104      if (!tcpip_tcp_timer_active && (tcp_active_pcbs || tcp_tw_pcbs)) {
000104  e5901008          LDR      r1,[r0,#8]  ; tcpip_tcp_timer_active
000108  e3510000          CMP      r1,#0
;;;105        /* enable and start timer */
;;;106        tcpip_tcp_timer_active = 1;
;;;107        sys_timeout(TCP_TMR_INTERVAL, tcpip_tcp_timer, NULL);
;;;108      }
;;;109    }
00010c  112fff1e          BXNE     lr
000110  e59f117c          LDR      r1,|L1.660|
000114  e59f217c          LDR      r2,|L1.664|
000118  e5911000          LDR      r1,[r1,#0]            ;104  ; tcp_active_pcbs
00011c  e5922000          LDR      r2,[r2,#0]            ;104  ; tcp_tw_pcbs
000120  e1911002          ORRS     r1,r1,r2              ;104
000124  012fff1e          BXEQ     lr
000128  e3a01001          MOV      r1,#1                 ;106
00012c  e5801008          STR      r1,[r0,#8]            ;107  ; tcpip_tcp_timer_active
000130  e3a02000          MOV      r2,#0                 ;107
000134  e59f1160          LDR      r1,|L1.668|
000138  e3a000fa          MOV      r0,#0xfa              ;107
00013c  eafffffe          B        sys_timeout
;;;110    #endif /* LWIP_TCP */
                          ENDP

                  ip_reass_timer PROC
;;;118    static void
;;;119    ip_reass_timer(void *arg)
000140  e92d4010          PUSH     {r4,lr}
;;;120    {
;;;121      LWIP_UNUSED_ARG(arg);
;;;122      LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: ip_reass_tmr()\n"));
;;;123      ip_reass_tmr();
000144  ebfffffe          BL       ip_reass_tmr
;;;124      sys_timeout(IP_TMR_INTERVAL, ip_reass_timer, NULL);
000148  e8bd4010          POP      {r4,lr}
00014c  e59f114c          LDR      r1,|L1.672|
000150  e3a02000          MOV      r2,#0
000154  e3a00ffa          MOV      r0,#0x3e8
000158  eafffffe          B        sys_timeout
;;;125    }
;;;126    #endif /* IP_REASSEMBLY */
                          ENDP

                  arp_timer PROC
;;;134    static void
;;;135    arp_timer(void *arg)
00015c  e92d4010          PUSH     {r4,lr}
;;;136    {
;;;137      LWIP_UNUSED_ARG(arg);
;;;138      LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: etharp_tmr()\n"));
;;;139      etharp_tmr();
000160  ebfffffe          BL       etharp_tmr
;;;140      sys_timeout(ARP_TMR_INTERVAL, arp_timer, NULL);
000164  e8bd4010          POP      {r4,lr}
000168  e59f1134          LDR      r1,|L1.676|
00016c  e59f0134          LDR      r0,|L1.680|
000170  e3a02000          MOV      r2,#0
000174  eafffffe          B        sys_timeout
;;;141    }
;;;142    #endif /* LWIP_ARP */
                          ENDP

                  dhcp_timer_coarse PROC
;;;150    static void
;;;151    dhcp_timer_coarse(void *arg)
000178  e92d4010          PUSH     {r4,lr}
;;;152    {
;;;153      LWIP_UNUSED_ARG(arg);
;;;154      LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: dhcp_coarse_tmr()\n"));
;;;155      dhcp_coarse_tmr();
00017c  ebfffffe          BL       dhcp_coarse_tmr
;;;156      sys_timeout(DHCP_COARSE_TIMER_MSECS, dhcp_timer_coarse, NULL);
000180  e8bd4010          POP      {r4,lr}
000184  e59f1120          LDR      r1,|L1.684|
000188  e59f0120          LDR      r0,|L1.688|
00018c  e3a02000          MOV      r2,#0
000190  eafffffe          B        sys_timeout
;;;157    }
;;;158    
                          ENDP

                  dhcp_timer_fine PROC
;;;164    static void
;;;165    dhcp_timer_fine(void *arg)
000194  e92d4010          PUSH     {r4,lr}
;;;166    {
;;;167      LWIP_UNUSED_ARG(arg);
;;;168      LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: dhcp_fine_tmr()\n"));
;;;169      dhcp_fine_tmr();
000198  ebfffffe          BL       dhcp_fine_tmr
;;;170      sys_timeout(DHCP_FINE_TIMER_MSECS, dhcp_timer_fine, NULL);
00019c  e8bd4010          POP      {r4,lr}
0001a0  e59f110c          LDR      r1,|L1.692|
0001a4  e3a02000          MOV      r2,#0
0001a8  e3a00f7d          MOV      r0,#0x1f4
0001ac  eafffffe          B        sys_timeout
;;;171    }
;;;172    #endif /* LWIP_DHCP */
                          ENDP

                  sys_timeouts_init PROC
;;;222    /** Initialize this module */
;;;223    void sys_timeouts_init(void)
0001b0  e92d4010          PUSH     {r4,lr}
;;;224    {
;;;225    #if IP_REASSEMBLY
;;;226      sys_timeout(IP_TMR_INTERVAL, ip_reass_timer, NULL);
0001b4  e59f10e4          LDR      r1,|L1.672|
0001b8  e3a02000          MOV      r2,#0
0001bc  e3a00ffa          MOV      r0,#0x3e8
0001c0  ebfffffe          BL       sys_timeout
;;;227    #endif /* IP_REASSEMBLY */
;;;228    #if LWIP_ARP
;;;229      sys_timeout(ARP_TMR_INTERVAL, arp_timer, NULL);
0001c4  e59f10d8          LDR      r1,|L1.676|
0001c8  e59f00d8          LDR      r0,|L1.680|
0001cc  e3a02000          MOV      r2,#0
0001d0  ebfffffe          BL       sys_timeout
;;;230    #endif /* LWIP_ARP */
;;;231    #if LWIP_DHCP
;;;232      sys_timeout(DHCP_COARSE_TIMER_MSECS, dhcp_timer_coarse, NULL);
0001d4  e59f10d0          LDR      r1,|L1.684|
0001d8  e59f00d0          LDR      r0,|L1.688|
0001dc  e3a02000          MOV      r2,#0
0001e0  ebfffffe          BL       sys_timeout
;;;233      sys_timeout(DHCP_FINE_TIMER_MSECS, dhcp_timer_fine, NULL);
0001e4  e59f10c8          LDR      r1,|L1.692|
0001e8  e3a02000          MOV      r2,#0
0001ec  e3a00f7d          MOV      r0,#0x1f4
0001f0  ebfffffe          BL       sys_timeout
;;;234    #endif /* LWIP_DHCP */
;;;235    #if LWIP_AUTOIP
;;;236      sys_timeout(AUTOIP_TMR_INTERVAL, autoip_timer, NULL);
;;;237    #endif /* LWIP_AUTOIP */
;;;238    #if LWIP_IGMP
;;;239      sys_timeout(IGMP_TMR_INTERVAL, igmp_timer, NULL);
;;;240    #endif /* LWIP_IGMP */
;;;241    #if LWIP_DNS
;;;242      sys_timeout(DNS_TMR_INTERVAL, dns_timer, NULL);
;;;243    #endif /* LWIP_DNS */
;;;244    
;;;245    #if NO_SYS
;;;246      /* Initialise timestamp for sys_check_timeouts */
;;;247      timeouts_last_time = sys_now();
0001f4  ebfffffe          BL       sys_now
0001f8  e59f1004          LDR      r1,|L1.516|
0001fc  e5810004          STR      r0,[r1,#4]  ; timeouts_last_time
;;;248    #endif
;;;249    }
000200  e8bd8010          POP      {r4,pc}
                  |L1.516|
                          DCD      ||.data||
                  |L1.520|
000208  6c776970          DCB      "lwip-1.4.1\\src\\core\\timers.c",0
00020c  2d312e34
000210  2e315c73
000214  72635c63
000218  6f72655c
00021c  74696d65
000220  72732e63
000224  00      
000225  00                DCB      0
000226  00                DCB      0
000227  00                DCB      0
                  |L1.552|
                          DCD      0x00000111
                  |L1.556|
00022c  7379735f          DCB      "sys_timeout: timeout != NULL, pool MEMP_SYS_TIMEOUT is "
000230  74696d65
000234  6f75743a
000238  2074696d
00023c  656f7574
000240  20213d20
000244  4e554c4c
000248  2c20706f
00024c  6f6c204d
000250  454d505f
000254  5359535f
000258  54494d45
00025c  4f555420
000260  697320  
000263  656d7074          DCB      "empty",0
000267  7900    
000269  00                DCB      0
00026a  00                DCB      0
00026b  00                DCB      0
                  |L1.620|
00026c  41737365          DCB      "Assertion ""%s"" failed at line %d in %s\n",0
000270  7274696f
000274  6e202225
000278  73222066
00027c  61696c65
000280  64206174
000284  206c696e
000288  65202564
00028c  20696e20
000290  25730a00
                  |L1.660|
                          DCD      tcp_active_pcbs
                  |L1.664|
                          DCD      tcp_tw_pcbs
                  |L1.668|
                          DCD      tcpip_tcp_timer
                  |L1.672|
                          DCD      ip_reass_timer
                  |L1.676|
                          DCD      arp_timer
                  |L1.680|
                          DCD      0x00001388
                  |L1.684|
                          DCD      dhcp_timer_coarse
                  |L1.688|
                          DCD      0x0000ea60
                  |L1.692|
                          DCD      dhcp_timer_fine
                          ENDP

                  sys_untimeout PROC
;;;320    void
;;;321    sys_untimeout(sys_timeout_handler handler, void *arg)
0002b8  e92d0030          PUSH     {r4,r5}
;;;322    {
;;;323      struct sys_timeo *prev_t, *t;
;;;324    
;;;325      if (next_timeout == NULL) {
0002bc  e51f40c0          LDR      r4,|L1.516|
0002c0  e1a03001          MOV      r3,r1                 ;322
0002c4  e5941000          LDR      r1,[r4,#0]  ; next_timeout
0002c8  e3510000          CMP      r1,#0
;;;326        return;
;;;327      }
;;;328    
;;;329      for (t = next_timeout, prev_t = NULL; t != NULL; prev_t = t, t = t->next) {
0002cc  13a02000          MOVNE    r2,#0
0002d0  0a000016          BEQ      |L1.816|
                  |L1.724|
;;;330        if ((t->h == handler) && (t->arg == arg)) {
0002d4  e591c008          LDR      r12,[r1,#8]
0002d8  e15c0000          CMP      r12,r0
0002dc  0591c00c          LDREQ    r12,[r1,#0xc]
0002e0  015c0003          CMPEQ    r12,r3
0002e4  1a00000d          BNE      |L1.800|
;;;331          /* We have a match */
;;;332          /* Unlink from previous in list */
;;;333          if (prev_t == NULL) {
;;;334            next_timeout = t->next;
;;;335          } else {
;;;336            prev_t->next = t->next;
0002e8  e5910000          LDR      r0,[r1,#0]
0002ec  e3520000          CMP      r2,#0                 ;333
0002f0  05840000          STREQ    r0,[r4,#0]            ;334  ; next_timeout
0002f4  15820000          STRNE    r0,[r2,#0]
;;;337          }
;;;338          /* If not the last one, add time of this one back to next */
;;;339          if (t->next != NULL) {
0002f8  e5910000          LDR      r0,[r1,#0]
0002fc  e3500000          CMP      r0,#0
000300  0a000003          BEQ      |L1.788|
;;;340            t->next->time += t->time;
000304  e5902004          LDR      r2,[r0,#4]
000308  e5913004          LDR      r3,[r1,#4]
00030c  e0822003          ADD      r2,r2,r3
000310  e5802004          STR      r2,[r0,#4]
                  |L1.788|
;;;341          }
;;;342          memp_free(MEMP_SYS_TIMEOUT, t);
000314  e8bd0030          POP      {r4,r5}
000318  e3a00005          MOV      r0,#5
00031c  eafffffe          B        memp_free
                  |L1.800|
000320  e1a02001          MOV      r2,r1                 ;329
000324  e5911000          LDR      r1,[r1,#0]            ;329
000328  e3510000          CMP      r1,#0                 ;329
00032c  1affffe8          BNE      |L1.724|
                  |L1.816|
;;;343          return;
;;;344        }
;;;345      }
;;;346      return;
;;;347    }
000330  e8bd0030          POP      {r4,r5}
000334  e12fff1e          BX       lr
;;;348    
                          ENDP

                  sys_check_timeouts PROC
;;;357    void
;;;358    sys_check_timeouts(void)
000338  e92d47f0          PUSH     {r4-r10,lr}
;;;359    {
;;;360      if (next_timeout) {
00033c  e51f7140          LDR      r7,|L1.516|
000340  e5970000          LDR      r0,[r7,#0]  ; next_timeout
000344  e3500000          CMP      r0,#0
;;;361        struct sys_timeo *tmptimeout;
;;;362        u32_t diff;
;;;363        sys_timeout_handler handler;
;;;364        void *arg;
;;;365        u8_t had_one;
;;;366        u32_t now;
;;;367    
;;;368        now = sys_now();
;;;369        /* this cares for wraparounds */
;;;370        diff = now - timeouts_last_time;
;;;371        do
;;;372        {
;;;373    #if PBUF_POOL_FREE_OOSEQ
;;;374          PBUF_CHECK_FREE_OOSEQ();
;;;375    #endif /* PBUF_POOL_FREE_OOSEQ */
;;;376          had_one = 0;
;;;377          tmptimeout = next_timeout;
;;;378          if (tmptimeout && (tmptimeout->time <= diff)) {
;;;379            /* timeout has expired */
;;;380            had_one = 1;
;;;381            timeouts_last_time = now;
;;;382            diff -= tmptimeout->time;
;;;383            next_timeout = tmptimeout->next;
;;;384            handler = tmptimeout->h;
;;;385            arg = tmptimeout->arg;
;;;386    #if LWIP_DEBUG_TIMERNAMES
;;;387            if (handler != NULL) {
;;;388              LWIP_DEBUGF(TIMERS_DEBUG, ("sct calling h=%s arg=%p\n",
;;;389                tmptimeout->handler_name, arg));
;;;390            }
;;;391    #endif /* LWIP_DEBUG_TIMERNAMES */
;;;392            memp_free(MEMP_SYS_TIMEOUT, tmptimeout);
;;;393            if (handler != NULL) {
;;;394              handler(arg);
;;;395            }
;;;396          }
;;;397        /* repeat until all expired timers have been called */
;;;398        }while(had_one);
;;;399      }
;;;400    }
000348  08bd87f0          POPEQ    {r4-r10,pc}
00034c  ebfffffe          BL       sys_now
000350  e1a06000          MOV      r6,r0                 ;368
000354  e5970004          LDR      r0,[r7,#4]            ;370  ; timeouts_last_time
000358  e59f8068          LDR      r8,|L1.968|
00035c  e0464000          SUB      r4,r6,r0              ;370
                  |L1.864|
000360  e5d80000          LDRB     r0,[r8,#0]            ;374  ; pbuf_free_ooseq_pending
000364  e3500000          CMP      r0,#0                 ;374
000368  1bfffffe          BLNE     pbuf_free_ooseq
00036c  e5971000          LDR      r1,[r7,#0]            ;377  ; next_timeout
000370  e3510000          CMP      r1,#0                 ;378
000374  08bd87f0          POPEQ    {r4-r10,pc}
000378  e5912004          LDR      r2,[r1,#4]            ;378
00037c  e1520004          CMP      r2,r4                 ;378
000380  88bd87f0          POPHI    {r4-r10,pc}
000384  e5876004          STR      r6,[r7,#4]            ;383  ; timeouts_last_time
000388  e5910000          LDR      r0,[r1,#0]            ;383
00038c  e0444002          SUB      r4,r4,r2              ;382
000390  e5870000          STR      r0,[r7,#0]            ;384  ; next_timeout
000394  e5915008          LDR      r5,[r1,#8]            ;392
000398  e591900c          LDR      r9,[r1,#0xc]          ;392
00039c  e3a00005          MOV      r0,#5                 ;392
0003a0  ebfffffe          BL       memp_free
0003a4  e3550000          CMP      r5,#0                 ;393
0003a8  11a00009          MOVNE    r0,r9                 ;394
0003ac  112fff35          BLXNE    r5                    ;394
0003b0  eaffffea          B        |L1.864|
;;;401    
                          ENDP

                  sys_restart_timeouts PROC
;;;407    void
;;;408    sys_restart_timeouts(void)
0003b4  e92d4010          PUSH     {r4,lr}
;;;409    {
;;;410      timeouts_last_time = sys_now();
0003b8  ebfffffe          BL       sys_now
0003bc  e51f11c0          LDR      r1,|L1.516|
0003c0  e5810004          STR      r0,[r1,#4]  ; timeouts_last_time
;;;411    }
0003c4  e8bd8010          POP      {r4,pc}
;;;412    
                          ENDP

                  |L1.968|
                          DCD      pbuf_free_ooseq_pending

                          AREA ||.data||, DATA, ALIGN=2

                  next_timeout
                          DCD      0x00000000
                  timeouts_last_time
                          DCD      0x00000000
                  tcpip_tcp_timer_active
                          DCD      0x00000000
