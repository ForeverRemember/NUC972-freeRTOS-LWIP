; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\memp.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\memp.d --cpu=ARM926EJ-S --apcs=interwork --diag_suppress=9931,1295,177,550 -I.\Driver\Include -I.\lwip-1.4.1\include -I.\lwip-1.4.1\src\include\ipv4 -I.\lwip-1.4.1\src\include\ -I"C:\Program Study\Keil5\ARM\RV31\INC" -I"C:\Program Study\Keil5\ARM\CMSIS\Include" -I"C:\Program Study\Keil5\ARM\INC\Toshiba" -D__UVISION_VERSION=524 --omf_browse=.\obj\memp.crf lwip-1.4.1\src\core\memp.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  memp_init PROC
;;;337    void
;;;338    memp_init(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;339    {
;;;340      struct memp *memp;
;;;341      u16_t i, j;
;;;342    
;;;343      for (i = 0; i < MEMP_MAX; ++i) {
000004  e3a00000          MOV      r0,#0
                  |L1.8|
000008  e2800001          ADD      r0,r0,#1
00000c  e3c00801          BIC      r0,r0,#0x10000
000010  e3500008          CMP      r0,#8
000014  3afffffb          BCC      |L1.8|
;;;344        MEMP_STATS_AVAIL(used, i, 0);
;;;345        MEMP_STATS_AVAIL(max, i, 0);
;;;346        MEMP_STATS_AVAIL(err, i, 0);
;;;347        MEMP_STATS_AVAIL(avail, i, memp_num[i]);
;;;348      }
;;;349    
;;;350    #if !MEMP_SEPARATE_POOLS
;;;351      memp = (struct memp *)LWIP_MEM_ALIGN(memp_memory);
000018  e59f0120          LDR      r0,|L1.320|
;;;352    #endif /* !MEMP_SEPARATE_POOLS */
;;;353      /* for every pool: */
;;;354      for (i = 0; i < MEMP_MAX; ++i) {
;;;355        memp_tab[i] = NULL;
;;;356    #if MEMP_SEPARATE_POOLS
;;;357        memp = (struct memp*)memp_bases[i];
;;;358    #endif /* MEMP_SEPARATE_POOLS */
;;;359        /* create a linked list of memp elements */
;;;360        for (j = 0; j < memp_num[i]; ++j) {
;;;361          memp->next = memp_tab[i];
;;;362          memp_tab[i] = memp;
;;;363          memp = (struct memp *)(void *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]
00001c  e59f5124          LDR      r5,|L1.328|
000020  e3c01003          BIC      r1,r0,#3              ;351
000024  e59f3118          LDR      r3,|L1.324|
000028  e3a00000          MOV      r0,#0                 ;354
00002c  e1a07000          MOV      r7,r0                 ;354
000030  e2856010          ADD      r6,r5,#0x10           ;360
                  |L1.52|
000034  e3a02000          MOV      r2,#0                 ;360
000038  e085c080          ADD      r12,r5,r0,LSL #1
00003c  e0864080          ADD      r4,r6,r0,LSL #1       ;360
000040  e7837100          STR      r7,[r3,r0,LSL #2]     ;355
000044  ea000006          B        |L1.100|
                  |L1.72|
000048  e7938100          LDR      r8,[r3,r0,LSL #2]     ;361
00004c  e2822001          ADD      r2,r2,#1
000050  e5818000          STR      r8,[r1,#0]            ;361
000054  e7831100          STR      r1,[r3,r0,LSL #2]     ;362
000058  e1dc80b0          LDRH     r8,[r12,#0]
00005c  e3c22801          BIC      r2,r2,#0x10000        ;360
000060  e0811008          ADD      r1,r1,r8
                  |L1.100|
000064  e1d480b0          LDRH     r8,[r4,#0]            ;360
000068  e1520008          CMP      r2,r8                 ;360
00006c  3afffff5          BCC      |L1.72|
000070  e2800001          ADD      r0,r0,#1              ;360
000074  e3c00801          BIC      r0,r0,#0x10000        ;354
000078  e3500008          CMP      r0,#8                 ;354
00007c  3affffec          BCC      |L1.52|
;;;364    #if MEMP_OVERFLOW_CHECK
;;;365            + MEMP_SANITY_REGION_AFTER_ALIGNED
;;;366    #endif
;;;367          );
;;;368        }
;;;369      }
;;;370    #if MEMP_OVERFLOW_CHECK
;;;371      memp_overflow_init();
;;;372      /* check everything a first time to see if it worked */
;;;373      memp_overflow_check_all();
;;;374    #endif /* MEMP_OVERFLOW_CHECK */
;;;375    }
000080  e8bd81f0          POP      {r4-r8,pc}
;;;376    
                          ENDP

                  memp_malloc PROC
;;;389    #if !MEMP_OVERFLOW_CHECK
;;;390    memp_malloc(memp_t type)
000084  e92d4070          PUSH     {r4-r6,lr}
;;;391    #else
;;;392    memp_malloc_fn(memp_t type, const char* file, const int line)
;;;393    #endif
;;;394    {
;;;395      struct memp *memp;
;;;396      SYS_ARCH_DECL_PROTECT(old_level);
;;;397     
;;;398      LWIP_ERROR("memp_malloc: type < MEMP_MAX", (type < MEMP_MAX), return NULL;);
000088  e3500008          CMP      r0,#8
00008c  e1a05000          MOV      r5,r0                 ;394
000090  3a000006          BCC      |L1.176|
000094  e59f20cc          LDR      r2,|L1.360|
000098  e28f30ac          ADR      r3,|L1.332|
00009c  e28f10c8          ADR      r1,|L1.364|
0000a0  e28f00e4          ADR      r0,|L1.396|
0000a4  ebfffffe          BL       sysprintf
0000a8  e3a00000          MOV      r0,#0
;;;399    
;;;400      SYS_ARCH_PROTECT(old_level);
;;;401    #if MEMP_OVERFLOW_CHECK >= 2
;;;402      memp_overflow_check_all();
;;;403    #endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;404    
;;;405      memp = memp_tab[type];
;;;406      
;;;407      if (memp != NULL) {
;;;408        memp_tab[type] = memp->next;
;;;409    #if MEMP_OVERFLOW_CHECK
;;;410        memp->next = NULL;
;;;411        memp->file = file;
;;;412        memp->line = line;
;;;413    #endif /* MEMP_OVERFLOW_CHECK */
;;;414        MEMP_STATS_INC_USED(used, type);
;;;415        LWIP_ASSERT("memp_malloc: memp properly aligned",
;;;416                    ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
;;;417        memp = (struct memp*)(void *)((u8_t*)memp + MEMP_SIZE);
;;;418      } else {
;;;419        LWIP_DEBUGF(MEMP_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("memp_malloc: out of memory in pool %s\n", memp_desc[type]));
;;;420        MEMP_STATS_INC(err, type);
;;;421      }
;;;422    
;;;423      SYS_ARCH_UNPROTECT(old_level);
;;;424    
;;;425      return memp;
;;;426    }
0000ac  e8bd8070          POP      {r4-r6,pc}
                  |L1.176|
0000b0  ebfffffe          BL       sys_arch_protect
0000b4  e1a06000          MOV      r6,r0                 ;400
0000b8  e59f0084          LDR      r0,|L1.324|
0000bc  e7904105          LDR      r4,[r0,r5,LSL #2]     ;405
0000c0  e3540000          CMP      r4,#0                 ;407
0000c4  15941000          LDRNE    r1,[r4,#0]            ;408
0000c8  17801105          STRNE    r1,[r0,r5,LSL #2]     ;408
0000cc  13140003          TSTNE    r4,#3                 ;415
0000d0  0a000004          BEQ      |L1.232|
0000d4  e59f20d8          LDR      r2,|L1.436|
0000d8  e28f306c          ADR      r3,|L1.332|
0000dc  e28f10d4          ADR      r1,|L1.440|
0000e0  e28f00a4          ADR      r0,|L1.396|
0000e4  ebfffffe          BL       sysprintf
                  |L1.232|
0000e8  e1a00006          MOV      r0,r6                 ;423
0000ec  ebfffffe          BL       sys_arch_unprotect
0000f0  e1a00004          MOV      r0,r4                 ;425
0000f4  e8bd8070          POP      {r4-r6,pc}
;;;427    
                          ENDP

                  memp_free PROC
;;;434    void
;;;435    memp_free(memp_t type, void *mem)
0000f8  e92d4070          PUSH     {r4-r6,lr}
;;;436    {
0000fc  e1b04001          MOVS     r4,r1
000100  e1a05000          MOV      r5,r0
;;;437      struct memp *memp;
;;;438      SYS_ARCH_DECL_PROTECT(old_level);
;;;439    
;;;440      if (mem == NULL) {
;;;441        return;
;;;442      }
;;;443      LWIP_ASSERT("memp_free: mem properly aligned",
;;;444                    ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
;;;445    
;;;446      memp = (struct memp *)(void *)((u8_t*)mem - MEMP_SIZE);
;;;447    
;;;448      SYS_ARCH_PROTECT(old_level);
;;;449    #if MEMP_OVERFLOW_CHECK
;;;450    #if MEMP_OVERFLOW_CHECK >= 2
;;;451      memp_overflow_check_all();
;;;452    #else
;;;453      memp_overflow_check_element_overflow(memp, type);
;;;454      memp_overflow_check_element_underflow(memp, type);
;;;455    #endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;456    #endif /* MEMP_OVERFLOW_CHECK */
;;;457    
;;;458      MEMP_STATS_DEC(used, type); 
;;;459      
;;;460      memp->next = memp_tab[type]; 
;;;461      memp_tab[type] = memp;
;;;462    
;;;463    #if MEMP_SANITY_CHECK
;;;464      LWIP_ASSERT("memp sanity", memp_sanity());
;;;465    #endif /* MEMP_SANITY_CHECK */
;;;466    
;;;467      SYS_ARCH_UNPROTECT(old_level);
;;;468    }
000104  08bd8070          POPEQ    {r4-r6,pc}
000108  e3140003          TST      r4,#3                 ;443
00010c  0a000004          BEQ      |L1.292|
000110  e59f20c4          LDR      r2,|L1.476|
000114  e28f3030          ADR      r3,|L1.332|
000118  e28f10c0          ADR      r1,|L1.480|
00011c  e28f0068          ADR      r0,|L1.396|
000120  ebfffffe          BL       sysprintf
                  |L1.292|
000124  ebfffffe          BL       sys_arch_protect
000128  e59f1014          LDR      r1,|L1.324|
00012c  e7912105          LDR      r2,[r1,r5,LSL #2]     ;460
000130  e5842000          STR      r2,[r4,#0]            ;460
000134  e7814105          STR      r4,[r1,r5,LSL #2]     ;461
000138  e8bd4070          POP      {r4-r6,lr}            ;467
00013c  eafffffe          B        sys_arch_unprotect
;;;469    
                          ENDP

                  |L1.320|
                          DCD      ||.bss||+0x23
                  |L1.324|
                          DCD      ||.bss||
                  |L1.328|
                          DCD      ||.constdata||
                  |L1.332|
00014c  6c776970          DCB      "lwip-1.4.1\\src\\core\\memp.c",0
000150  2d312e34
000154  2e315c73
000158  72635c63
00015c  6f72655c
000160  6d656d70
000164  2e6300  
000167  00                DCB      0
                  |L1.360|
                          DCD      0x0000018e
                  |L1.364|
00016c  6d656d70          DCB      "memp_malloc: type < MEMP_MAX",0
000170  5f6d616c
000174  6c6f633a
000178  20747970
00017c  65203c20
000180  4d454d50
000184  5f4d4158
000188  00      
000189  00                DCB      0
00018a  00                DCB      0
00018b  00                DCB      0
                  |L1.396|
00018c  41737365          DCB      "Assertion ""%s"" failed at line %d in %s\n",0
000190  7274696f
000194  6e202225
000198  73222066
00019c  61696c65
0001a0  64206174
0001a4  206c696e
0001a8  65202564
0001ac  20696e20
0001b0  25730a00
                  |L1.436|
                          DCD      0x0000019f
                  |L1.440|
0001b8  6d656d70          DCB      "memp_malloc: memp properly aligned",0
0001bc  5f6d616c
0001c0  6c6f633a
0001c4  206d656d
0001c8  70207072
0001cc  6f706572
0001d0  6c792061
0001d4  6c69676e
0001d8  656400  
0001db  00                DCB      0
                  |L1.476|
                          DCD      0x000001bb
                  |L1.480|
0001e0  6d656d70          DCB      "memp_free: mem properly aligned",0
0001e4  5f667265
0001e8  653a206d
0001ec  656d2070
0001f0  726f7065
0001f4  726c7920
0001f8  616c6967
0001fc  6e656400

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  memp_tab
                          %        32
                  memp_memory
                          %        10147

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  memp_sizes
000000  00200098          DCW      0x0020,0x0098
000004  001c0014          DCW      0x001c,0x0014
000008  00200010          DCW      0x0020,0x0010
00000c  00100430          DCW      0x0010,0x0430
                  memp_num
000010  00040004          DCW      0x0004,0x0004
000014  00040010          DCW      0x0004,0x0010
000018  00010007          DCW      0x0001,0x0007
00001c  00100008          DCW      0x0010,0x0008
